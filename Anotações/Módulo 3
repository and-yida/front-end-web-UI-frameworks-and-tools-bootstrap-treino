BOOTSTRAP JAVASCRIPT COMPONENTS

Bootstrap dá suporte a várias classes CSS que podem ser aplicadas a marcações HTML. Os componentes baseados em CSS podem ver ativados aplicando as classes CSS do Bootstrap.
Parte das classes CSS do Bootstrap começam com uma classe base - por exemplo, o obitão advém da classe "btn", ao qual é possível adicionar outras classes e modificadores - as modifier classes podem ser aplicadas para modificar o comportamento do componente base.
Dessa forma, o pontapé inicial é aplicar das classes de JavaScript. Podemos usar pluings de JavaScript para nos aproveitarmos dessas classes.
JQuery é uma biblioteca em JS que facilita a aproximação ao todo do conteúdo de JS. Bootstrap vai além e reúne os plugins de JS (incluindo JQuery-based) em um componente que pode ser mais facilmente utilizável.
Componentes JS do Bootstrap podem ser utilizados sem que haja a necessidade de escrever nenhuma linha de JS. Utilizaremos a sintaxe "data-* atributos". Os atributos data adicionam mais informações relacionadas ao elemento (descartando o uso de alternativas semanticamente inapropriadas). 
O "data-toggle" é um atributo de dados do HTML que liga automaticamente o elemento ao tipo correspondente.
Ex.:
    
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" href="#"
                role="tab" data-toggle="tab">
O "data-target" é um atributo que faz referência ao seu alvo. Contém um seletor CSS que aponta para o elemento HTML.
Ex.:
    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">


TABS, PILLS AND TABBED NAVIGATION

Tabs and pills
Elementos de navegação permitem navegar por conteúdos na página que são organizados em múltiplos painéis.
Com as abas, é possível revelar conteúdo clicando, sem ter que mudar de página.
Criamos abas de navegação através de:
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" href="#id"
                role="tab" data-toggle="tab">Tab text</a>
    //criamos uma lista, cada nav-item é o cabeçalho de uma aba
    //colocar em outro div os conteúdos de cada aba
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane fade" id="peter">
    //criamos uma classe "tab-content"
    //cada div "tabpanel" referencia o id de sua respectiva aba


COLLAPSE AND ACCORDION

O plugin Collapse fornece maneiras de revelar e esconder conteúdo. O acionamento geralmente é feito por um botão ou um link.
No uso de collapse na barra de navegação, temos um botão toggler, e um div "navbar-collapse" com o id da barra (que agiria como o mecanismo para que o plugin Collapse funcione).
Ex.:
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#Navbar">
    //...
    <div class="collapse navbar-collapse" id="Navbar">
No accordion, um item do conteúdo é revelado por vez, de forma que ao clicar em um link, o conteúdo é revelado ou escondido horizontalmente.


TOOLTIPS, POPOVERS AND MODALS

Existem recursos para revelar informação sobrepondo conteúdos na página. Um exemplo é revelar um conteúdo no momento em que o usuário clica em algo ou passa o cursor sobre determinado ponto. A informação é exibida como uma sobreposição.
É interessante colocar uma tooltip sobre botões e links, indicando qual ação aquele elemento desencadeia.
Modal é utilizado para apresentar informações mais detalhadas (exemplo janela de login).
É necessário adicionar um script para ativar os recursos, que está na sintaxe do JQuery. Para o tooltip, mo final da seção body (junto aos pacotes), adicionar:
    <script>
        $(document).ready(function(){
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
    //quando o documento (página) estiver pronta para ser renderizada, essa função é invocada.

Tooltip
Para adicionar uma tooltip a um botão, adicionar: data-toogle="tooltip" data-hmtl="true"
Ex.:
    <a role="button" class="btn"
    data-toggle="tooltip" data-html="true" title="text"
    data-placement="bottom">Botão</a>
    //data-html é atributo que vai permitir estilizar usando HTML, para em seguida definir o title
    //data-placement define em que posição a tooltip aparece em relação ao botão

Modal
Para criar um modal, utilizar um div de classe "modal", definir um id e role "dialog". Dentro disso, criar um outro div para o conteúdo, com classe "modal-dialog" e role "content".
Ex.:
    <div id="loginModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg" role="content">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Login</h4>
                    <button type="button" class="close" data-dismiss="modal">
                        &times;
                    </button>
    //temos aqui um botão para fechar o modal
                </div>
                <div class="modal-body">
No caso de um modal para fazer login, podemos adicionar um formulário no corpo do modal.
    <div class="modal-body">
        <form>

        //primeira linha: email, senha e checkbox "lembrar-me"

            <div class="form-row">
                <div class="form-group col-sm-4">
                    <label class="sr-only" for="exampleInputEmail3">Email address</label>
                    <input type="email" class="form-control form-control-sm mr-1" id="exampleInputEmail3" placeholder="Enter email">
                </div>
                <div class="form-group col-sm-4">
                    <label class="sr-only" for="exampleInputPassword3">Password</label>
                    <input type="password" class="form-control form-control-sm mr-1" id="exampleInputPassword3" placeholder="Password">
                </div>
                <div class="col-sm-auto">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox">
                        <label class="form-check-label"> Remember me
                         </label>
                    </div>
                </div>
            </div>
            // sr-only esconde um elemento para todos os dispositivos, exceto leitores de tela (acessibilidade para quem não enxerga)

        //segunda linha: botões cancelar e entrar

            <div class="form-row">
                <button type="button" class="btn btn-secondary btn-sm ml-auto" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary btn-sm ml-1">Sign in</button>        
            </div>
        </form>
    </div>
Além disso, posicionar o modal na navbar:
    <span class="navbar-text">
        <a data-toggle="modal" data-target="#loginModal">
        <span class="fa fa-sign-in"></span> Login</a>
    </span>


CAROUSEL

Carousel permite exibir múltiplos itens através de uma animação, como um slideshow. É possível controlar manualmente o carrossel, passando os itens para direita ou esquerda.
Dentro de uma coluna, criar a classe "carousel slide".
    <div id="mycarousel" class="carousel slide" data-ride="carousel">
        <div class="carousel-inner" role="listbox">
Cada item (slide) é denifido por "carousel-item"
     <div class="carousel-item active">   //active é para o primeiro elemento a aparecer
         <img class=""
        src="" alt="">
        <div class="carousel-caption d-none d-md-block">
            <h2>...</h2>
            <p>...</p>
É necessário criar, dentro da classe "carousel-inner", uma lista dos slides.
    <ol class="carousel-indicators">
        <li data-target="#mycarousel" data-slide-to="0" class="active"></li>
        <li data-target="#mycarousel" data-slide-to="1"></li>
        <li data-target="#mycarousel" data-slide-to="2"></li>
    </ol>
Por fim, as setas (botões) que controlam a passagem de um slide para outro à direita e à esquerda são definidos da seguinte forma:
<a class="carousel-control-prev" href="#mycarousel" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon"></span>
</a>
<a class="carousel-control-next" href="#mycarousel" role="button" data-slide="next">
    <span class="carousel-control-next-icon"></span>
